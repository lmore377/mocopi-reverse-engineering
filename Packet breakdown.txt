To start the data stream, you need to send a command to a certain BLE UUID. Look at the python scripts for examples.
The data from the sensor is sent thru the BLE UUID `0000ff00-0000-1000-8000-00805f9b34fb`.

The data that comes from the sensor in little endian format and each part is a signed decimal (unless otherwise noted)

Here's an example of what a packet looks like: 
`0xB0 0x46 0x3E 0x63 0xD9 0x09 0x5A 0x17 0x87 0x15 0x80 0xE8 0x40 0x00 0x27 0x02 0x87 0x15 0x80 0xE8  0x27 0x02 0xE5 0xAB 0x36 0xB6 0x75 0xB2 0xD1 0xB0 0x22 0xB6 0x17 0x9A`

Here's how the packet is structured:

1     - `0xB0` - 176 - Unknown, sometimes changes to 0x30 under unknown circumstances

2-8   - `0x46 0x3E 0x63 0xD9 0x09 0x5A 0x17` - 6572922812710470 - Counter that increases with every packet sent. Is a unsigned integer 

9-10  - `0x87 0x15` - -0.6727294921875 - W value of a quaternion

11-12 - `0x80 0xE8` - 0.734375         - X value of a quaternion

13-14 - `0x40 0x00` - -0.0078125       - Y value of a quaternion

15-16 - `0x27 0x02` - -0.0672607421875 - Z value of a quaternion

17-18 - `0x87 0x15` - -0.6727294921875 - W value from the previous packet

19-20 - `0x80 0xE8` - 0.734375         - X value from the previous packet

21-22 - `0x40 0x00` - -0.0078125       - Y value from the previous packet

23-24 - `0x27 0x02` - -0.0672607421875 - Z value from the previous packet


All of the following values are unknown. Here they're represented as unsigned ints
25 - 0xE5 - 229
26 - 0xAB - 171
27 - 0x36 - 54
28 - 0xB6 - 182
29 - 0x75 - 117
30 - 0xB2 - 178
31 - 0xD1 - 209
32 - 0xB0 - 176
33 - 0x22 - 34
34 - 0xB6 - 182
35 - 0x17 - 23
36 - 0x9A - 154

